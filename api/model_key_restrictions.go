/*
NetHSM

All endpoints expect exactly the specified JSON. Additional properties will cause a Bad Request Error (400). All HTTP errors contain a JSON structure with an explanation of type string. All [base64](https://tools.ietf.org/html/rfc4648#section-4) encoded values are Big Endian. 

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the KeyRestrictions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyRestrictions{}

// KeyRestrictions struct for KeyRestrictions
type KeyRestrictions struct {
	Tags []string `json:"tags,omitempty"`
}

// NewKeyRestrictions instantiates a new KeyRestrictions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyRestrictions() *KeyRestrictions {
	this := KeyRestrictions{}
	return &this
}

// NewKeyRestrictionsWithDefaults instantiates a new KeyRestrictions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyRestrictionsWithDefaults() *KeyRestrictions {
	this := KeyRestrictions{}
	return &this
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *KeyRestrictions) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyRestrictions) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *KeyRestrictions) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *KeyRestrictions) SetTags(v []string) {
	o.Tags = v
}

func (o KeyRestrictions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyRestrictions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

type NullableKeyRestrictions struct {
	value *KeyRestrictions
	isSet bool
}

func (v NullableKeyRestrictions) Get() *KeyRestrictions {
	return v.value
}

func (v *NullableKeyRestrictions) Set(val *KeyRestrictions) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyRestrictions) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyRestrictions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyRestrictions(val *KeyRestrictions) *NullableKeyRestrictions {
	return &NullableKeyRestrictions{value: val, isSet: true}
}

func (v NullableKeyRestrictions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyRestrictions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


