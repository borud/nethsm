/*
NetHSM

All endpoints expect exactly the specified JSON. Additional properties will cause a Bad Request Error (400). All HTTP errors contain a JSON structure with an explanation of type string. All [base64](https://tools.ietf.org/html/rfc4648#section-4) encoded values are Big Endian. 

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the Pcr type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Pcr{}

// Pcr struct for Pcr
type Pcr struct {
	Var0 *string `json:"0,omitempty"`
	Var2 *string `json:"2,omitempty"`
}

// NewPcr instantiates a new Pcr object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPcr() *Pcr {
	this := Pcr{}
	return &this
}

// NewPcrWithDefaults instantiates a new Pcr object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPcrWithDefaults() *Pcr {
	this := Pcr{}
	return &this
}

// GetVar0 returns the Var0 field value if set, zero value otherwise.
func (o *Pcr) GetVar0() string {
	if o == nil || IsNil(o.Var0) {
		var ret string
		return ret
	}
	return *o.Var0
}

// GetVar0Ok returns a tuple with the Var0 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pcr) GetVar0Ok() (*string, bool) {
	if o == nil || IsNil(o.Var0) {
		return nil, false
	}
	return o.Var0, true
}

// HasVar0 returns a boolean if a field has been set.
func (o *Pcr) HasVar0() bool {
	if o != nil && !IsNil(o.Var0) {
		return true
	}

	return false
}

// SetVar0 gets a reference to the given string and assigns it to the Var0 field.
func (o *Pcr) SetVar0(v string) {
	o.Var0 = &v
}

// GetVar2 returns the Var2 field value if set, zero value otherwise.
func (o *Pcr) GetVar2() string {
	if o == nil || IsNil(o.Var2) {
		var ret string
		return ret
	}
	return *o.Var2
}

// GetVar2Ok returns a tuple with the Var2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pcr) GetVar2Ok() (*string, bool) {
	if o == nil || IsNil(o.Var2) {
		return nil, false
	}
	return o.Var2, true
}

// HasVar2 returns a boolean if a field has been set.
func (o *Pcr) HasVar2() bool {
	if o != nil && !IsNil(o.Var2) {
		return true
	}

	return false
}

// SetVar2 gets a reference to the given string and assigns it to the Var2 field.
func (o *Pcr) SetVar2(v string) {
	o.Var2 = &v
}

func (o Pcr) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Pcr) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Var0) {
		toSerialize["0"] = o.Var0
	}
	if !IsNil(o.Var2) {
		toSerialize["2"] = o.Var2
	}
	return toSerialize, nil
}

type NullablePcr struct {
	value *Pcr
	isSet bool
}

func (v NullablePcr) Get() *Pcr {
	return v.value
}

func (v *NullablePcr) Set(val *Pcr) {
	v.value = val
	v.isSet = true
}

func (v NullablePcr) IsSet() bool {
	return v.isSet
}

func (v *NullablePcr) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePcr(val *Pcr) *NullablePcr {
	return &NullablePcr{value: val, isSet: true}
}

func (v NullablePcr) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePcr) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


