/*
NetHSM

All endpoints expect exactly the specified JSON. Additional properties will cause a Bad Request Error (400). All HTTP errors contain a JSON structure with an explanation of type string. All [base64](https://tools.ietf.org/html/rfc4648#section-4) encoded values are Big Endian. 

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the KeyGenerateRequestData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyGenerateRequestData{}

// KeyGenerateRequestData struct for KeyGenerateRequestData
type KeyGenerateRequestData struct {
	Mechanisms []KeyMechanism `json:"mechanisms"`
	Type KeyType `json:"type"`
	Length *int32 `json:"length,omitempty"`
	Id *string `json:"id,omitempty" validate:"regexp=^[a-zA-Z0-9][a-zA-Z0-9_.-]*$"`
	Restrictions *KeyRestrictions `json:"restrictions,omitempty"`
}

type _KeyGenerateRequestData KeyGenerateRequestData

// NewKeyGenerateRequestData instantiates a new KeyGenerateRequestData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyGenerateRequestData(mechanisms []KeyMechanism, type_ KeyType) *KeyGenerateRequestData {
	this := KeyGenerateRequestData{}
	this.Mechanisms = mechanisms
	this.Type = type_
	return &this
}

// NewKeyGenerateRequestDataWithDefaults instantiates a new KeyGenerateRequestData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyGenerateRequestDataWithDefaults() *KeyGenerateRequestData {
	this := KeyGenerateRequestData{}
	return &this
}

// GetMechanisms returns the Mechanisms field value
func (o *KeyGenerateRequestData) GetMechanisms() []KeyMechanism {
	if o == nil {
		var ret []KeyMechanism
		return ret
	}

	return o.Mechanisms
}

// GetMechanismsOk returns a tuple with the Mechanisms field value
// and a boolean to check if the value has been set.
func (o *KeyGenerateRequestData) GetMechanismsOk() ([]KeyMechanism, bool) {
	if o == nil {
		return nil, false
	}
	return o.Mechanisms, true
}

// SetMechanisms sets field value
func (o *KeyGenerateRequestData) SetMechanisms(v []KeyMechanism) {
	o.Mechanisms = v
}

// GetType returns the Type field value
func (o *KeyGenerateRequestData) GetType() KeyType {
	if o == nil {
		var ret KeyType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *KeyGenerateRequestData) GetTypeOk() (*KeyType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *KeyGenerateRequestData) SetType(v KeyType) {
	o.Type = v
}

// GetLength returns the Length field value if set, zero value otherwise.
func (o *KeyGenerateRequestData) GetLength() int32 {
	if o == nil || IsNil(o.Length) {
		var ret int32
		return ret
	}
	return *o.Length
}

// GetLengthOk returns a tuple with the Length field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyGenerateRequestData) GetLengthOk() (*int32, bool) {
	if o == nil || IsNil(o.Length) {
		return nil, false
	}
	return o.Length, true
}

// HasLength returns a boolean if a field has been set.
func (o *KeyGenerateRequestData) HasLength() bool {
	if o != nil && !IsNil(o.Length) {
		return true
	}

	return false
}

// SetLength gets a reference to the given int32 and assigns it to the Length field.
func (o *KeyGenerateRequestData) SetLength(v int32) {
	o.Length = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KeyGenerateRequestData) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyGenerateRequestData) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KeyGenerateRequestData) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *KeyGenerateRequestData) SetId(v string) {
	o.Id = &v
}

// GetRestrictions returns the Restrictions field value if set, zero value otherwise.
func (o *KeyGenerateRequestData) GetRestrictions() KeyRestrictions {
	if o == nil || IsNil(o.Restrictions) {
		var ret KeyRestrictions
		return ret
	}
	return *o.Restrictions
}

// GetRestrictionsOk returns a tuple with the Restrictions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyGenerateRequestData) GetRestrictionsOk() (*KeyRestrictions, bool) {
	if o == nil || IsNil(o.Restrictions) {
		return nil, false
	}
	return o.Restrictions, true
}

// HasRestrictions returns a boolean if a field has been set.
func (o *KeyGenerateRequestData) HasRestrictions() bool {
	if o != nil && !IsNil(o.Restrictions) {
		return true
	}

	return false
}

// SetRestrictions gets a reference to the given KeyRestrictions and assigns it to the Restrictions field.
func (o *KeyGenerateRequestData) SetRestrictions(v KeyRestrictions) {
	o.Restrictions = &v
}

func (o KeyGenerateRequestData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyGenerateRequestData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["mechanisms"] = o.Mechanisms
	toSerialize["type"] = o.Type
	if !IsNil(o.Length) {
		toSerialize["length"] = o.Length
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Restrictions) {
		toSerialize["restrictions"] = o.Restrictions
	}
	return toSerialize, nil
}

func (o *KeyGenerateRequestData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"mechanisms",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varKeyGenerateRequestData := _KeyGenerateRequestData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varKeyGenerateRequestData)

	if err != nil {
		return err
	}

	*o = KeyGenerateRequestData(varKeyGenerateRequestData)

	return err
}

type NullableKeyGenerateRequestData struct {
	value *KeyGenerateRequestData
	isSet bool
}

func (v NullableKeyGenerateRequestData) Get() *KeyGenerateRequestData {
	return v.value
}

func (v *NullableKeyGenerateRequestData) Set(val *KeyGenerateRequestData) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyGenerateRequestData) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyGenerateRequestData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyGenerateRequestData(val *KeyGenerateRequestData) *NullableKeyGenerateRequestData {
	return &NullableKeyGenerateRequestData{value: val, isSet: true}
}

func (v NullableKeyGenerateRequestData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyGenerateRequestData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


