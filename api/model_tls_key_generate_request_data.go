/*
NetHSM

All endpoints expect exactly the specified JSON. Additional properties will cause a Bad Request Error (400). All HTTP errors contain a JSON structure with an explanation of type string. All [base64](https://tools.ietf.org/html/rfc4648#section-4) encoded values are Big Endian. 

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TlsKeyGenerateRequestData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TlsKeyGenerateRequestData{}

// TlsKeyGenerateRequestData struct for TlsKeyGenerateRequestData
type TlsKeyGenerateRequestData struct {
	Type TlsKeyType `json:"type"`
	Length *int32 `json:"length,omitempty"`
}

type _TlsKeyGenerateRequestData TlsKeyGenerateRequestData

// NewTlsKeyGenerateRequestData instantiates a new TlsKeyGenerateRequestData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTlsKeyGenerateRequestData(type_ TlsKeyType) *TlsKeyGenerateRequestData {
	this := TlsKeyGenerateRequestData{}
	this.Type = type_
	return &this
}

// NewTlsKeyGenerateRequestDataWithDefaults instantiates a new TlsKeyGenerateRequestData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTlsKeyGenerateRequestDataWithDefaults() *TlsKeyGenerateRequestData {
	this := TlsKeyGenerateRequestData{}
	return &this
}

// GetType returns the Type field value
func (o *TlsKeyGenerateRequestData) GetType() TlsKeyType {
	if o == nil {
		var ret TlsKeyType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *TlsKeyGenerateRequestData) GetTypeOk() (*TlsKeyType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *TlsKeyGenerateRequestData) SetType(v TlsKeyType) {
	o.Type = v
}

// GetLength returns the Length field value if set, zero value otherwise.
func (o *TlsKeyGenerateRequestData) GetLength() int32 {
	if o == nil || IsNil(o.Length) {
		var ret int32
		return ret
	}
	return *o.Length
}

// GetLengthOk returns a tuple with the Length field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsKeyGenerateRequestData) GetLengthOk() (*int32, bool) {
	if o == nil || IsNil(o.Length) {
		return nil, false
	}
	return o.Length, true
}

// HasLength returns a boolean if a field has been set.
func (o *TlsKeyGenerateRequestData) HasLength() bool {
	if o != nil && !IsNil(o.Length) {
		return true
	}

	return false
}

// SetLength gets a reference to the given int32 and assigns it to the Length field.
func (o *TlsKeyGenerateRequestData) SetLength(v int32) {
	o.Length = &v
}

func (o TlsKeyGenerateRequestData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TlsKeyGenerateRequestData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	if !IsNil(o.Length) {
		toSerialize["length"] = o.Length
	}
	return toSerialize, nil
}

func (o *TlsKeyGenerateRequestData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTlsKeyGenerateRequestData := _TlsKeyGenerateRequestData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTlsKeyGenerateRequestData)

	if err != nil {
		return err
	}

	*o = TlsKeyGenerateRequestData(varTlsKeyGenerateRequestData)

	return err
}

type NullableTlsKeyGenerateRequestData struct {
	value *TlsKeyGenerateRequestData
	isSet bool
}

func (v NullableTlsKeyGenerateRequestData) Get() *TlsKeyGenerateRequestData {
	return v.value
}

func (v *NullableTlsKeyGenerateRequestData) Set(val *TlsKeyGenerateRequestData) {
	v.value = val
	v.isSet = true
}

func (v NullableTlsKeyGenerateRequestData) IsSet() bool {
	return v.isSet
}

func (v *NullableTlsKeyGenerateRequestData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTlsKeyGenerateRequestData(val *TlsKeyGenerateRequestData) *NullableTlsKeyGenerateRequestData {
	return &NullableTlsKeyGenerateRequestData{value: val, isSet: true}
}

func (v NullableTlsKeyGenerateRequestData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTlsKeyGenerateRequestData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


