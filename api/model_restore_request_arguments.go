/*
NetHSM

All endpoints expect exactly the specified JSON. Additional properties will cause a Bad Request Error (400). All HTTP errors contain a JSON structure with an explanation of type string. All [base64](https://tools.ietf.org/html/rfc4648#section-4) encoded values are Big Endian. 

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// checks if the RestoreRequestArguments type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestoreRequestArguments{}

// RestoreRequestArguments struct for RestoreRequestArguments
type RestoreRequestArguments struct {
	BackupPassphrase *string `json:"backupPassphrase,omitempty"`
	SystemTime *time.Time `json:"systemTime,omitempty"`
}

// NewRestoreRequestArguments instantiates a new RestoreRequestArguments object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreRequestArguments() *RestoreRequestArguments {
	this := RestoreRequestArguments{}
	return &this
}

// NewRestoreRequestArgumentsWithDefaults instantiates a new RestoreRequestArguments object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreRequestArgumentsWithDefaults() *RestoreRequestArguments {
	this := RestoreRequestArguments{}
	return &this
}

// GetBackupPassphrase returns the BackupPassphrase field value if set, zero value otherwise.
func (o *RestoreRequestArguments) GetBackupPassphrase() string {
	if o == nil || IsNil(o.BackupPassphrase) {
		var ret string
		return ret
	}
	return *o.BackupPassphrase
}

// GetBackupPassphraseOk returns a tuple with the BackupPassphrase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreRequestArguments) GetBackupPassphraseOk() (*string, bool) {
	if o == nil || IsNil(o.BackupPassphrase) {
		return nil, false
	}
	return o.BackupPassphrase, true
}

// HasBackupPassphrase returns a boolean if a field has been set.
func (o *RestoreRequestArguments) HasBackupPassphrase() bool {
	if o != nil && !IsNil(o.BackupPassphrase) {
		return true
	}

	return false
}

// SetBackupPassphrase gets a reference to the given string and assigns it to the BackupPassphrase field.
func (o *RestoreRequestArguments) SetBackupPassphrase(v string) {
	o.BackupPassphrase = &v
}

// GetSystemTime returns the SystemTime field value if set, zero value otherwise.
func (o *RestoreRequestArguments) GetSystemTime() time.Time {
	if o == nil || IsNil(o.SystemTime) {
		var ret time.Time
		return ret
	}
	return *o.SystemTime
}

// GetSystemTimeOk returns a tuple with the SystemTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreRequestArguments) GetSystemTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.SystemTime) {
		return nil, false
	}
	return o.SystemTime, true
}

// HasSystemTime returns a boolean if a field has been set.
func (o *RestoreRequestArguments) HasSystemTime() bool {
	if o != nil && !IsNil(o.SystemTime) {
		return true
	}

	return false
}

// SetSystemTime gets a reference to the given time.Time and assigns it to the SystemTime field.
func (o *RestoreRequestArguments) SetSystemTime(v time.Time) {
	o.SystemTime = &v
}

func (o RestoreRequestArguments) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestoreRequestArguments) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BackupPassphrase) {
		toSerialize["backupPassphrase"] = o.BackupPassphrase
	}
	if !IsNil(o.SystemTime) {
		toSerialize["systemTime"] = o.SystemTime
	}
	return toSerialize, nil
}

type NullableRestoreRequestArguments struct {
	value *RestoreRequestArguments
	isSet bool
}

func (v NullableRestoreRequestArguments) Get() *RestoreRequestArguments {
	return v.value
}

func (v *NullableRestoreRequestArguments) Set(val *RestoreRequestArguments) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreRequestArguments) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreRequestArguments) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreRequestArguments(val *RestoreRequestArguments) *NullableRestoreRequestArguments {
	return &NullableRestoreRequestArguments{value: val, isSet: true}
}

func (v NullableRestoreRequestArguments) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreRequestArguments) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


